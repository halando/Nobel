// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nobel.Data;

#nullable disable

namespace Nobel.Migrations
{
    [DbContext(typeof(NobelDijContext))]
    partial class NobelDijContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Nobel.Models.Dij", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ev")
                        .HasColumnType("int");

                    b.Property<int>("TipusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipusId");

                    b.ToTable("Dijak");
                });

            modelBuilder.Entity("Nobel.Models.Fajta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipusok");
                });

            modelBuilder.Entity("Nobel.Models.Dij", b =>
                {
                    b.HasOne("Nobel.Models.Fajta", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipus");
                });
#pragma warning restore 612, 618
        }
    }
}
